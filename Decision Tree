# STEP 1: Import Libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns

# STEP 2: Load Dataset
data = load_breast_cancer()
X = data.data
y = data.target

print("Feature names:", data.feature_names[:5], "...")
print("Target names:", data.target_names)

# STEP 3: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# STEP 4: Build Decision Tree Model
clf = DecisionTreeClassifier(criterion="entropy", max_depth=2, random_state=42)
clf.fit(X_train, y_train)

# STEP 5: Predictions & Evaluation
y_pred = clf.predict(X_test)
acc = accuracy_score(y_test, y_pred)

print("Accuracy:", acc)
print("\nClassification Report:\n", classification_report(y_test, y_pred, target_names=data.target_names))

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6,4))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=data.target_names, yticklabels=data.target_names)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

# STEP 6: Visualize Decision Tree
plt.figure(figsize=(8,10))
plot_tree(clf, filled=True, feature_names=data.feature_names, class_names=data.target_names, fontsize=8)
plt.title("Decision Tree Visualization (max_depth=2)")
plt.show()

# STEP 7: Predict on New Sample
sample = X_test[0].reshape(1, -1)
sample_prediction = clf.predict(sample)

print("\nNew Sample Prediction:", data.target_names[sample_prediction][0])
print("Actual Label:", data.target_names[y_test[0]])
